version: '3.8'

services:
  # InfluxDB Time-series Database
  influxdb:
    image: influxdb:2.7
    container_name: timeseries-influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpassword
      - DOCKER_INFLUXDB_INIT_ORG=timeseries
      - DOCKER_INFLUXDB_INIT_BUCKET=stock_data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=admin-token-123
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - timeseries-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Python FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: timeseries-backend
    ports:
      - "8000:8000"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=admin-token-123
      - INFLUXDB_ORG=timeseries
      - INFLUXDB_BUCKET=stock_data
      - ENVIRONMENT=production
    volumes:
      - ./backend:/app
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - timeseries-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: timeseries-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_INFLUXDB_URL=http://localhost:8086
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - timeseries-network

volumes:
  influxdb_data:
    driver: local

networks:
  timeseries-network:
    driver: bridge
